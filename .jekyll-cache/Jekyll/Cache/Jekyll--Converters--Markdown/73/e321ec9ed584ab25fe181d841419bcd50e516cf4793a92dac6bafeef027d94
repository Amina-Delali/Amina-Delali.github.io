I"#<h1 id="what-are-dataview-literals">What Are Dataview Literals</h1>

<p>You can find their official definition from the <strong>Dataview</strong> <a href="https://blacksmithgu.github.io/obsidian-dataview/reference/literals/"><strong>Documentation website</strong></a>, but this is how I am going to describe them: they are the values that you use inside your <strong>Dataview</strong> query, and that have no related <strong>data</strong>. As a reminder, the <strong>data</strong> is the information extracted from your notes frontmatter, your inline fields, and your notes implicit fields.</p>

<p>For example, values represented in the form of <strong>numbers</strong>, <strong>text</strong>, or <strong>dates</strong> are literals:</p>

<table class="table-bordered table-striped table-dark">
  <thead>
    <tr>
      <th>  Literal Examples</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> 25</td>
    </tr>
    <tr>
      <td> “This a Text”</td>
    </tr>
    <tr>
      <td> date (2024-02-02)</td>
    </tr>
  </tbody>
</table>

<p>In the example above, a <strong>date</strong> function was used to generate a <strong>literal</strong> <strong>Date Object</strong></p>

<h1 id="how-are-they-used">How Are They Used</h1>

<p>Imagine you have to extract all the notes that their names contain the word “<em>Definition</em>”. So you will use the literal “<em>Definition</em>” that is of type <strong>String</strong>. As you may notice,  the word “<em>Definition</em>” doesn’t refer to any particular <strong>data</strong> from the notes.</p>

<p>So, you can simply write the following <strong>query</strong>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```dataview
Table 
where contains(file.name, "Definition")
```
</code></pre></div></div>

<p>Here, I used the <strong>literal</strong> inside the <strong>Dataview function</strong> <em>contains</em>.</p>

<p>There are different types of literals that you can use in your queries:</p>

<table class="table-bordered table-striped table-dark">
  <thead>
    <tr>
      <th> Dataview Literals </th>
      <th>   Example  </th>
      <th>  Meaning  </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> Numbers</td>
      <td>  65</td>
      <td> The number 65</td>
    </tr>
    <tr>
      <td> Text</td>
      <td>  “This is actually a String”</td>
      <td>  The text “This is actually as String”</td>
    </tr>
    <tr>
      <td> Links</td>
      <td>  [[This is a Note]]</td>
      <td>  A link to the note: This is a Note</td>
    </tr>
    <tr>
      <td> List</td>
      <td>  [“word”, “letter”, “phrase”]</td>
      <td>  A list containing 3 string elements</td>
    </tr>
    <tr>
      <td> Objects</td>
      <td>  {key1: 5 , key2: “A Test” }</td>
      <td>  An object with 2 keys (key1 and key2) and their corresponding values</td>
    </tr>
    <tr>
      <td> Dates</td>
      <td> date (today)</td>
      <td> The date of today</td>
    </tr>
    <tr>
      <td> Durations</td>
      <td> dur (3 m)</td>
      <td>  3 Minutes duration</td>
    </tr>
  </tbody>
</table>

<p>In the table above, two different <strong>functions</strong> where used: <em>date</em> and <em>dur</em> to genereate two different types of literals: <strong>date</strong> and <strong>duration</strong> respectively.</p>

<p>The detailed list of <strong>literals</strong> and their possible <strong>values</strong> can be found in the <a href="https://blacksmithgu.github.io/obsidian-dataview/reference/literals/"><strong>Dataview Literal Documentation Page</strong></a></p>
<h1 id="this-how-i-used-them">This How I used Them</h1>

<p>In my <strong>daily note</strong>, I wanted to automatically highlight the due tasks with a specific indicator that is corresponding to their due dates.
So first, I list only the tasks that are due before or at the <strong>note’s date</strong>, and I <strong>group</strong> them by their <strong>due</strong> dates. Then, according to how far the due date of these tasks is from <strong>today’s date</strong>  , a <strong>colored square emoji</strong> is added to corresponding group:</p>

<p>🟩: they are due at or after the <strong>today’s date</strong> (the <strong>today’s date</strong> can be different from the <strong>note’s date</strong>).<br />
🟨: they are due <strong>1 day</strong> or more than <strong>1 day</strong>  before the <strong>today’s date</strong>. But, less than <strong>3 days</strong>.<br />
🟧: they are due <strong>3 days</strong> more than <strong>3 days</strong>  before the <strong>today’s date</strong>. But, less than <strong>7 days</strong>.<br />
🟥: they are due <strong>7 days</strong>  or more than <strong>7 days</strong>  before the <strong>today’s date</strong>.<br /></p>

<p><img src="/img/posts/The use of dataview literals example.png" alt="The use of dataview literals example" width="100%" height="100%" /></p>

<p>Of course, I used other literals to add other indicator, specifically related to my <strong>Obsidian</strong> vault, as well as to specify the <strong>folder</strong> from which to extract these tasks.</p>

<p>Here is the entire  <strong>Dataview query</strong> that I am using right now:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```dataview
task from "Execute/Projects" where !completed 
and due &lt;= date(this.file.name)
sort time  asc
sort due asc
group by  dateformat(due,"yyyy-MM-dd EEEE") +" " + truncate(substring(file.name,4),30)+" "+file.tags[0]+ choice(file.frontmatter.status[0]="progress"," 🧩","") +
choice(contains(file.folder,"Support")," 🧰",choice(contains(file.folder,"Action")," 🎬"," 📖"))+" "+
choice(date(today)-due&gt;=dur("7 days"),"🟥", choice( date(today)-due&gt;=dur("3 days")  ,"🟧",choice(date(today)-due&gt;=dur("1 days") ,"🟨", "🟩" )  ))
```
</code></pre></div></div>

<p>And here an extract of the result:</p>

<p><img src="/img/posts/The Use of Dataview Literals Results.png" alt="The use of Dataview Literals Results" width="100%" height="100%" /></p>
:ET