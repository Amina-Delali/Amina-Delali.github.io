<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-07-16T20:26:36+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">My Itinerary</title><subtitle>Learning While Creating A Digital Business</subtitle><author><name>Amina Delali</name></author><entry><title type="html">A Dataview Table in a Callout</title><link href="http://localhost:4000/2025/09/05/A-Dataview-In-A-callout.html" rel="alternate" type="text/html" title="A Dataview Table in a Callout" /><published>2025-09-05T20:41:00+01:00</published><updated>2025-09-05T20:41:00+01:00</updated><id>http://localhost:4000/2025/09/05/A%20Dataview%20In%20A%20callout</id><content type="html" xml:base="http://localhost:4000/2025/09/05/A-Dataview-In-A-callout.html">&lt;h1 id=&quot;a-callout&quot;&gt;A Callout&lt;/h1&gt;

&lt;p&gt;A &lt;em&gt;callout&lt;/em&gt; in &lt;strong&gt;Obsidian&lt;/strong&gt; is that particular block of text in a note that allow you to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;put your text in a sort of titled box with an icon&lt;/li&gt;
  &lt;li&gt;the title and the text are highlighted and distinguished from the rest of the text of the note&lt;/li&gt;
  &lt;li&gt;you have the option to customize the title icon&lt;/li&gt;
  &lt;li&gt;you also have 3 type of &lt;em&gt;callouts&lt;/em&gt;:
    &lt;ul&gt;
      &lt;li&gt;a simple block: the text and the title are displayed.&lt;/li&gt;
      &lt;li&gt;a &lt;em&gt;callout&lt;/em&gt; created with the  &lt;strong&gt;plus&lt;/strong&gt;  sign: the text and the title are by default displayed. But if you click on the &lt;strong&gt;arrow&lt;/strong&gt; button, it will close the callout, and you will see only the title.&lt;/li&gt;
      &lt;li&gt;a &lt;em&gt;callout&lt;/em&gt; created with the  &lt;strong&gt;minus&lt;/strong&gt;  sign: only the title is displayed by default. But if you click on the &lt;strong&gt;arrow&lt;/strong&gt; button, it will open the callout, and you will see the text too..&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The 3 types of &lt;em&gt;callouts&lt;/em&gt; are shown in the pictures below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/simple callout.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;tdataview obsidian query code snippets for displaying a resized image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/callout with plus sign.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;tdataview obsidian query code snippets for displaying a resized image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/callout with minus sign.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;tdataview obsidian query code snippets for displaying a resized image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You do not have to install anything to use &lt;em&gt;callouts&lt;/em&gt;. They are an embedded feature in &lt;strong&gt;Obsidian&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;a-dataview&quot;&gt;A Dataview&lt;/h1&gt;

&lt;p&gt;A &lt;em&gt;Dataview&lt;/em&gt;  is a community &lt;strong&gt;Obsidian&lt;/strong&gt; plugin that you have to install it on top of &lt;strong&gt;Obsidian&lt;/strong&gt; to be able to use it. It allows you to summarize data from your notes in &lt;em&gt;4 forms&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A table with customizable columns of the data selected.&lt;/li&gt;
  &lt;li&gt;A column of data displayed as a list.&lt;/li&gt;
  &lt;li&gt;A list of tasks, extracted from all the notes available in the &lt;strong&gt;Obsidian&lt;/strong&gt; vault.&lt;/li&gt;
  &lt;li&gt;A calendar with dots indicating notes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To use the plugin you have to write a query inside a &lt;em&gt;Dataview&lt;/em&gt; block. The block starts with &lt;strong&gt;3&lt;/strong&gt; backticks followed by the word &lt;strong&gt;dataview&lt;/strong&gt;, and closed by other &lt;strong&gt;3&lt;/strong&gt; backticks. As shown below:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```dataview

```  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The query is used to select the data to display,  and to define how to display this data.&lt;/p&gt;

&lt;p&gt;But sometimes, you want to hide the result, and to see it only when needed. This is when you can use &lt;em&gt;callouts&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&quot;how-to-add-a-dataview-query-to-a-callout&quot;&gt;How to add a Dataview query to a callout&lt;/h1&gt;

&lt;p&gt;It’s a simple trick:  you write your query first, then you copy all of it, but not the &lt;em&gt;closing&lt;/em&gt; &lt;strong&gt;backticks&lt;/strong&gt;. Then you paste everything into the &lt;em&gt;callout&lt;/em&gt;. And if there are any blank lines in your &lt;strong&gt;dataview&lt;/strong&gt; block, delete them.&lt;/p&gt;

&lt;p&gt;For example, let’s have this query that list the &lt;em&gt;notes&lt;/em&gt; in the vault that are created today:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-dataview&quot;&gt;table without id
file.link as &quot;**Note**&quot;,
tags as &quot;Tags&quot;
where file.cday = date(today)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And here is the resulting table:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/dataview table.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;tdataview obsidian query code snippets for displaying a resized image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And this how you put it in the following &lt;em&gt;callout&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; [!list]- Notes Created Today
&amp;gt; ```dataview
table without id
file.link as &quot;**Note**&quot;,
tags as &quot;Tags&quot;
where file.cday = date(today)                
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is the result (when the &lt;em&gt;callout&lt;/em&gt; is open, and when it is &lt;em&gt;closed&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/a dataview inside a callout.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;tdataview obsidian query code snippets for displaying a resized image&quot; /&gt;&lt;/p&gt;</content><author><name>Amina Delali</name></author><summary type="html">A Callout</summary></entry><entry><title type="html">You Won’t Believe It If I Tell You!</title><link href="http://localhost:4000/2024/12/28/You-Won't-Believe-It-If-I-Tell-You!.html" rel="alternate" type="text/html" title="You Won’t Believe It If I Tell You!" /><published>2024-12-28T07:15:00+01:00</published><updated>2024-12-28T07:15:00+01:00</updated><id>http://localhost:4000/2024/12/28/You%20Won&apos;t%20Believe%20It%20If%20I%20Tell%20You!</id><content type="html" xml:base="http://localhost:4000/2024/12/28/You-Won&apos;t-Believe-It-If-I-Tell-You!.html">&lt;h1 id=&quot;what-i-am-talking-about&quot;&gt;What I Am Talking About&lt;/h1&gt;

&lt;p&gt;We use the &lt;strong&gt;Dataview&lt;/strong&gt; plugin in &lt;strong&gt;Obsidian&lt;/strong&gt; to display information, and meta data about the notes availables in our vault. But sometimes, these notes may contain links (or even transclusions) of images.&lt;/p&gt;

&lt;p&gt;So first, I am going to confirm that yes, it is possible to display a preview of an image inside a &lt;strong&gt;Dataview&lt;/strong&gt; table. But not only that, you can also display a resized preview of it.&lt;/p&gt;

&lt;p&gt;Right now, I had found two cases in which we can manipulate these kinds of links:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;You have a bulleted list in your note, and one of the items of that list contains a link (or a transclusion) of an image available inside your vault.&lt;/li&gt;
  &lt;li&gt;You have a YAML property defined in your note that may contain links to images in your vault&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this post, we are going to talk about the second case: links in a &lt;strong&gt;frontmatter&lt;/strong&gt; property.&lt;/p&gt;

&lt;h1 id=&quot;this-is-how-it-works&quot;&gt;This Is How It Works&lt;/h1&gt;
&lt;p&gt;First, there are two &lt;strong&gt;Dataview Obsidian&lt;/strong&gt; functions that we will use in our query:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;link&lt;/em&gt;: generates a link from a given file’s path or name.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;embed&lt;/em&gt;: converts a link into an embedded link.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The goal is to display a table in a particular note of the small preview of images links defined in the frontmatter of several different notes available in our vault. 
So, this is what we are going to do inside our query:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;create a link from this frontmatter property by calling the &lt;em&gt;link&lt;/em&gt; function, but we add an other parameter to specify the size in witch we are going to display the preview. In the code snippet below, these parameters are &lt;strong&gt;property_value&lt;/strong&gt;, and &lt;strong&gt;size&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;then we pass the result to the the embed function.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/dataview obsidian query code snippets for displaying a resized image.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;tdataview obsidian query code snippets for displaying a resized image&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;a-simple-example&quot;&gt;A Simple Example&lt;/h1&gt;
&lt;p&gt;I have the note “&lt;em&gt;Images Listing Example&lt;/em&gt;”, in which I am going to Display the images defined in other notes two YAML properties:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;originalfile&lt;/em&gt;: a list of items that will contain only one link of an image available in the vault&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;processedfile&lt;/em&gt;: a list of items that will also contain only one link of the corresponding processed image (also from the vault)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, I have a list of notes that describe images. Each note, has in its frontmatter a link to an image (the original property), and an other  link  corresponding to its processed image (the processed property).&lt;/p&gt;

&lt;p&gt;So, in our case, the  &lt;strong&gt;property_value&lt;/strong&gt; will be &lt;strong&gt;originalfile[0]&lt;/strong&gt; for one column, and &lt;strong&gt;processedfile[0]&lt;/strong&gt; for the second displayed column.&lt;/p&gt;

&lt;p&gt;The first column will simply display the links to the corresponding notes.&lt;/p&gt;

&lt;p&gt;Note that I didn’t have to use a list to define links, I could have just used a &lt;em&gt;text property&lt;/em&gt;. But this is the way I prefer defining links 🙂.&lt;/p&gt;

&lt;p&gt;Now here is the query:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```
table without id
file.link as &quot;The Images Notes&quot;,
embed(link(originalfile[0],&quot;100&quot;)) as &quot;Original&quot;,
embed(link(processedfile[0],&quot;100&quot;)) as &quot;Processed&quot;
from #attachement and !&quot;Itinerary/Kit/Templates&quot;
where originalfile[0] 
```
 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For a bit of context:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;from&lt;/strong&gt; section, consider the notes tagged with #attachement and that are not a template note.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;where&lt;/strong&gt; section, select the notes that have the &lt;strong&gt;foriginalfile&lt;/strong&gt; property set.&lt;/li&gt;
  &lt;li&gt;The “100” parameter will correspond to the chosen size.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And here is a preview of the result:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/dataview obsidian size preview image.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;the display of a dataview table containing a small preview of images&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;an-unexpected-bonus&quot;&gt;An Unexpected Bonus&lt;/h1&gt;

&lt;p&gt;If you install the &lt;strong&gt;Image Toolkit&lt;/strong&gt; plugin, you can click on the images when you hover over them, and you can see a detached, bigger size preview of them:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/zoomed preview of an obsidian dataview image link.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;the display of a zoomed preview of an obsidian dataview image link.png&quot; /&gt;&lt;/p&gt;</content><author><name>Amina Delali</name></author><summary type="html">What I Am Talking About</summary></entry><entry><title type="html">Progress bar in a Dataview Obsidian Table</title><link href="http://localhost:4000/2024/09/05/Create-a-Progress-bar-in-an-Obsidian-Dataview-Table.html" rel="alternate" type="text/html" title="Progress bar in a Dataview Obsidian Table" /><published>2024-09-05T16:18:00+01:00</published><updated>2024-09-05T16:18:00+01:00</updated><id>http://localhost:4000/2024/09/05/Create%20a%20Progress%20bar%20in%20an%20Obsidian%20Dataview%20Table</id><content type="html" xml:base="http://localhost:4000/2024/09/05/Create-a-Progress-bar-in-an-Obsidian-Dataview-Table.html">&lt;h1 id=&quot;how-to-set-up&quot;&gt;How to Set Up&lt;/h1&gt;

&lt;p&gt;Imagine you have in your &lt;strong&gt;Obsidian&lt;/strong&gt; note two &lt;strong&gt;YAML&lt;/strong&gt; fields:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;target: that represents the number of tasks you will work on&lt;/li&gt;
  &lt;li&gt;value: that represents the number of the completed task&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You want to use a &lt;strong&gt;Dataview&lt;/strong&gt; block to generate a table about information on your progress. You can simply display the values, and calculate the progress in percentage. But you can also add a &lt;strong&gt;beautiful&lt;/strong&gt; visualization for your progress: display a &lt;strong&gt;progress bar&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;When you set up your &lt;strong&gt;progress bar&lt;/strong&gt;, you must consider these two parts:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;the actual &lt;strong&gt;progress bar&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;the label (progress value) to add to your progress bar.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The actual progress bar is defined by two values:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;the maximum value. In our case, the maximum number of tasks.&lt;/li&gt;
  &lt;li&gt;the value of progress In our case, the number of completed tasks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To define these values, you use this formula in the &lt;strong&gt;Dataview&lt;/strong&gt; block:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```
&quot;&amp;lt;progress max=&quot; + target + &quot; value=&quot; + value + &quot;&amp;gt; &amp;lt;/progress&amp;gt; &quot; 
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To define the label to add, you simply calculate the value of the progress:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```
	round(value/target*100) +  &quot;%&quot;
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;the-example&quot;&gt;The Example&lt;/h1&gt;

&lt;p&gt;In our case, we can have this entire &lt;strong&gt;dataview&lt;/strong&gt; formula:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```dataview
table without id
file.link as &quot;Example&quot;,
value as &quot;Value&quot;,
target as &quot;Target&quot;,
round(value / target * 100)+&quot;%&quot; as &quot;Advancement&quot;,
&quot;&amp;lt;progress max=&quot; + target + &quot; value=&quot; + value + &quot;&amp;gt; &amp;lt;/progress&amp;gt; &quot; 
+ round(value/target*100) +  &quot;%&quot; as &quot;Progress&quot;
from #task
where file.name=this.file.name
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;An here is what you can have, if the &lt;strong&gt;target&lt;/strong&gt; value is equal to &lt;strong&gt;15&lt;/strong&gt;, and the &lt;strong&gt;actual value&lt;/strong&gt; of completed task is equal to: &lt;strong&gt;5&lt;/strong&gt; :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/progress bar in dataview obsidian.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;the display of a progress bar in an obsidian dataview table&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One more thing to consider, is that you must ensure that your &lt;strong&gt;properties fields&lt;/strong&gt; are of type &lt;strong&gt;number&lt;/strong&gt;. If it is not the case, you will have to use in the formula the &lt;strong&gt;number&lt;/strong&gt; convert method, to convert them to numbers.&lt;/p&gt;</content><author><name>Amina Delali</name></author><summary type="html">How to Set Up</summary></entry><entry><title type="html">Automatically Centering Elements Horizontally with CSS</title><link href="http://localhost:4000/2024/02/17/Automatically-Centering-Elements-Horizontally-with-CSS.html" rel="alternate" type="text/html" title="Automatically Centering Elements Horizontally with CSS" /><published>2024-02-17T18:28:00+01:00</published><updated>2024-02-17T18:28:00+01:00</updated><id>http://localhost:4000/2024/02/17/Automatically%20Centering%20Elements%20Horizontally%20with%20CSS</id><content type="html" xml:base="http://localhost:4000/2024/02/17/Automatically-Centering-Elements-Horizontally-with-CSS.html">&lt;h1 id=&quot;block-elements&quot;&gt;Block Elements&lt;/h1&gt;

&lt;p&gt;If you always struggled with alignment in your &lt;strong&gt;html&lt;/strong&gt;, and corresponding &lt;strong&gt;CSS&lt;/strong&gt; code, especially with horizontal alignment, this may be helpful to you.&lt;/p&gt;

&lt;p&gt;The key idea is how to center horizontally any html element on a web page, without setting exact positioning values, in order to provide a responsive design. Knowing that the width of these elements is considered to be smaller than the viewport width.&lt;/p&gt;

&lt;p&gt;I discovered these two key elements to easily accomplish this alignment:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The display property of the html element&lt;/li&gt;
  &lt;li&gt;The margin of those elements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have &lt;strong&gt;block&lt;/strong&gt; elements, all you have to do is to set their left and right margin properties to &lt;em&gt;auto&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;For example, a &lt;strong&gt;div&lt;/strong&gt; can be centered as follow:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;35%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the code above, I set all the margin values to &lt;strong&gt;auto&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;inline-elements&quot;&gt;Inline Elements&lt;/h1&gt;

&lt;p&gt;If you have &lt;strong&gt;inline&lt;/strong&gt; elements,  just change their &lt;strong&gt;display&lt;/strong&gt; property to &lt;em&gt;block&lt;/em&gt;, then set the corresponding &lt;strong&gt;left&lt;/strong&gt; and &lt;strong&gt;right&lt;/strong&gt; margins to auto.
The example  below is an example of how to center an &lt;strong&gt;img&lt;/strong&gt; &lt;em&gt;horizontally&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;90%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the code above, I also set; at the same time, the &lt;strong&gt;margin-top&lt;/strong&gt; and &lt;strong&gt;margin-bottom&lt;/strong&gt; to &lt;em&gt;10px&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&quot;the-special-case-of-text-elements&quot;&gt;The Special Case of Text Elements&lt;/h1&gt;

&lt;p&gt;For &lt;strong&gt;block text elements&lt;/strong&gt;, like &lt;strong&gt;headers&lt;/strong&gt; and &lt;strong&gt;paragraphs&lt;/strong&gt; consider two situations:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The text will have no particular background, and no specific width (the default values will be applied)&lt;/li&gt;
  &lt;li&gt;The text will have a width smaller than its parent element, and a specific background color&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the first case, all you have to do, is to set the &lt;strong&gt;text-align&lt;/strong&gt; property to &lt;em&gt;center&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For the second case, you have also to set the &lt;strong&gt;margin-right&lt;/strong&gt; and &lt;strong&gt;margin-left&lt;/strong&gt; properties to &lt;em&gt;auto&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#98817b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For the &lt;strong&gt;inline text&lt;/strong&gt; element, you have to first set their &lt;strong&gt;display&lt;/strong&gt; property to &lt;em&gt;block&lt;/em&gt;, then consider the previously cited cases:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;If they have no particular background color and no specific small width, just set their &lt;strong&gt;text-align&lt;/strong&gt; element to center:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;In the other hand, if you want to have a background color and a particular width, you must also set the &lt;strong&gt;margin-left&lt;/strong&gt; and &lt;strong&gt;margin-right&lt;/strong&gt; to &lt;em&gt;auto&lt;/em&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#6d9a79&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;my-use-case&quot;&gt;My Use Case&lt;/h1&gt;

&lt;p&gt;I combined different types of elements, and centered all of them horizontally applying the rules I talked about above, and here is the result:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/result-align-horizontal.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;Centering horizontally different html elements&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The corresponding code can be found here. I added to enhance the responsiveness of the display, &lt;strong&gt;minimum-width&lt;/strong&gt; values for most of the elements. The &lt;strong&gt;image&lt;/strong&gt; element being automatically resized according to its parent &lt;strong&gt;div&lt;/strong&gt; element.&lt;/p&gt;
&lt;p class=&quot;codepen&quot; data-height=&quot;300&quot; data-default-tab=&quot;html,result&quot; data-slug-hash=&quot;zYbeVzG&quot; data-user=&quot;aminaAIM&quot; style=&quot;height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot;&gt;
  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/aminaAIM/pen/zYbeVzG&quot;&gt;
  Center an Image Horizontally&lt;/a&gt; by Amina (&lt;a href=&quot;https://codepen.io/aminaAIM&quot;&gt;@aminaAIM&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://cpwebassets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;</content><author><name>Amina Delali</name></author><summary type="html">Block Elements</summary></entry><entry><title type="html">They Are Called Dataview Literals</title><link href="http://localhost:4000/2024/02/02/They-Are-Called-Dataview-Literals-copy.html" rel="alternate" type="text/html" title="They Are Called Dataview Literals" /><published>2024-02-02T15:30:00+01:00</published><updated>2024-02-02T15:30:00+01:00</updated><id>http://localhost:4000/2024/02/02/They%20Are%20Called%20Dataview%20Literals%20copy</id><content type="html" xml:base="http://localhost:4000/2024/02/02/They-Are-Called-Dataview-Literals-copy.html">&lt;h1 id=&quot;what-are-dataview-literals&quot;&gt;What Are Dataview Literals&lt;/h1&gt;

&lt;p&gt;You can find their official definition from the &lt;strong&gt;Dataview&lt;/strong&gt; &lt;a href=&quot;https://blacksmithgu.github.io/obsidian-dataview/reference/literals/&quot;&gt;&lt;strong&gt;Documentation website&lt;/strong&gt;&lt;/a&gt;, but this is how I am going to describe them: they are the values that you use inside your &lt;strong&gt;Dataview&lt;/strong&gt; query, and that have no related &lt;strong&gt;data&lt;/strong&gt;. As a reminder, the &lt;strong&gt;data&lt;/strong&gt; is the information extracted from your notes frontmatter, your inline fields, and your notes implicit fields.&lt;/p&gt;

&lt;p&gt;For example, values represented in the form of &lt;strong&gt;numbers&lt;/strong&gt;, &lt;strong&gt;text&lt;/strong&gt;, or &lt;strong&gt;dates&lt;/strong&gt; are literals:&lt;/p&gt;

&lt;table class=&quot;table-bordered table-striped table-dark&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;  Literal Examples&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; 25&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; “This a Text”&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; date (2024-02-02)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;In the example above, a &lt;strong&gt;date&lt;/strong&gt; function was used to generate a &lt;strong&gt;literal&lt;/strong&gt; &lt;strong&gt;Date Object&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;how-are-they-used&quot;&gt;How Are They Used&lt;/h1&gt;

&lt;p&gt;Imagine you have to extract all the notes that their names contain the word “&lt;em&gt;Definition&lt;/em&gt;”. So you will use the literal “&lt;em&gt;Definition&lt;/em&gt;” that is of type &lt;strong&gt;String&lt;/strong&gt;. As you may notice,  the word “&lt;em&gt;Definition&lt;/em&gt;” doesn’t refer to any particular &lt;strong&gt;data&lt;/strong&gt; from the notes.&lt;/p&gt;

&lt;p&gt;So, you can simply write the following &lt;strong&gt;query&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```dataview
Table 
where contains(file.name, &quot;Definition&quot;)
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here, I used the &lt;strong&gt;literal&lt;/strong&gt; inside the &lt;strong&gt;Dataview function&lt;/strong&gt; &lt;em&gt;contains&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;There are different types of literals that you can use in your queries:&lt;/p&gt;

&lt;table class=&quot;table-bordered table-striped table-dark&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; Dataview Literals &lt;/th&gt;
      &lt;th&gt;   Example  &lt;/th&gt;
      &lt;th&gt;  Meaning  &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; Numbers&lt;/td&gt;
      &lt;td&gt;  65&lt;/td&gt;
      &lt;td&gt; The number 65&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; Text&lt;/td&gt;
      &lt;td&gt;  “This is actually a String”&lt;/td&gt;
      &lt;td&gt;  The text “This is actually as String”&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; Links&lt;/td&gt;
      &lt;td&gt;  [[This is a Note]]&lt;/td&gt;
      &lt;td&gt;  A link to the note: This is a Note&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; List&lt;/td&gt;
      &lt;td&gt;  [“word”, “letter”, “phrase”]&lt;/td&gt;
      &lt;td&gt;  A list containing 3 string elements&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; Objects&lt;/td&gt;
      &lt;td&gt;  {key1: 5 , key2: “A Test” }&lt;/td&gt;
      &lt;td&gt;  An object with 2 keys (key1 and key2) and their corresponding values&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; Dates&lt;/td&gt;
      &lt;td&gt; date (today)&lt;/td&gt;
      &lt;td&gt; The date of today&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; Durations&lt;/td&gt;
      &lt;td&gt; dur (3 m)&lt;/td&gt;
      &lt;td&gt;  3 Minutes duration&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;In the table above, two different &lt;strong&gt;functions&lt;/strong&gt; where used: &lt;em&gt;date&lt;/em&gt; and &lt;em&gt;dur&lt;/em&gt; to genereate two different types of literals: &lt;strong&gt;date&lt;/strong&gt; and &lt;strong&gt;duration&lt;/strong&gt; respectively.&lt;/p&gt;

&lt;p&gt;The detailed list of &lt;strong&gt;literals&lt;/strong&gt; and their possible &lt;strong&gt;values&lt;/strong&gt; can be found in the &lt;a href=&quot;https://blacksmithgu.github.io/obsidian-dataview/reference/literals/&quot;&gt;&lt;strong&gt;Dataview Literal Documentation Page&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;this-how-i-used-them&quot;&gt;This How I used Them&lt;/h1&gt;

&lt;p&gt;In my &lt;strong&gt;daily note&lt;/strong&gt;, I wanted to automatically highlight the due tasks with a specific indicator that is corresponding to their due dates.
So first, I list only the tasks that are due before or at the &lt;strong&gt;note’s date&lt;/strong&gt;, and I &lt;strong&gt;group&lt;/strong&gt; them by their &lt;strong&gt;due&lt;/strong&gt; dates. Then, according to how far the due date of these tasks is from &lt;strong&gt;today’s date&lt;/strong&gt;  , a &lt;strong&gt;colored square emoji&lt;/strong&gt; is added to corresponding group:&lt;/p&gt;

&lt;p&gt;🟩: they are due at or after the &lt;strong&gt;today’s date&lt;/strong&gt; (the &lt;strong&gt;today’s date&lt;/strong&gt; can be different from the &lt;strong&gt;note’s date&lt;/strong&gt;).&lt;br /&gt;
🟨: they are due &lt;strong&gt;1 day&lt;/strong&gt; or more than &lt;strong&gt;1 day&lt;/strong&gt;  before the &lt;strong&gt;today’s date&lt;/strong&gt;. But, less than &lt;strong&gt;3 days&lt;/strong&gt;.&lt;br /&gt;
🟧: they are due &lt;strong&gt;3 days&lt;/strong&gt; more than &lt;strong&gt;3 days&lt;/strong&gt;  before the &lt;strong&gt;today’s date&lt;/strong&gt;. But, less than &lt;strong&gt;7 days&lt;/strong&gt;.&lt;br /&gt;
🟥: they are due &lt;strong&gt;7 days&lt;/strong&gt;  or more than &lt;strong&gt;7 days&lt;/strong&gt;  before the &lt;strong&gt;today’s date&lt;/strong&gt;.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/The use of dataview literals example.png&quot; alt=&quot;The use of dataview literals example&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Of course, I used other literals to add other indicator, specifically related to my &lt;strong&gt;Obsidian&lt;/strong&gt; vault, as well as to specify the &lt;strong&gt;folder&lt;/strong&gt; from which to extract these tasks.&lt;/p&gt;

&lt;p&gt;Here is the entire  &lt;strong&gt;Dataview query&lt;/strong&gt; that I am using right now:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```dataview
task from &quot;Execute/Projects&quot; where !completed 
and due &amp;lt;= date(this.file.name)
sort time  asc
sort due asc
group by  dateformat(due,&quot;yyyy-MM-dd EEEE&quot;) +&quot; &quot; + truncate(substring(file.name,4),30)+&quot; &quot;+file.tags[0]+ choice(file.frontmatter.status[0]=&quot;progress&quot;,&quot; 🧩&quot;,&quot;&quot;) +
choice(contains(file.folder,&quot;Support&quot;),&quot; 🧰&quot;,choice(contains(file.folder,&quot;Action&quot;),&quot; 🎬&quot;,&quot; 📖&quot;))+&quot; &quot;+
choice(date(today)-due&amp;gt;=dur(&quot;7 days&quot;),&quot;🟥&quot;, choice( date(today)-due&amp;gt;=dur(&quot;3 days&quot;)  ,&quot;🟧&quot;,choice(date(today)-due&amp;gt;=dur(&quot;1 days&quot;) ,&quot;🟨&quot;, &quot;🟩&quot; )  ))
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here an extract of the result:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/The Use of Dataview Literals Results.png&quot; alt=&quot;The use of Dataview Literals Results&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;</content><author><name>Amina Delali</name></author><summary type="html">What Are Dataview Literals</summary></entry><entry><title type="html">Dataview Date Fields Have Properties</title><link href="http://localhost:4000/2024/01/28/Dataview-Dates-Have-Properties.html" rel="alternate" type="text/html" title="Dataview Date Fields Have Properties" /><published>2024-01-28T15:06:00+01:00</published><updated>2024-01-28T15:06:00+01:00</updated><id>http://localhost:4000/2024/01/28/Dataview%20Dates%20Have%20Properties</id><content type="html" xml:base="http://localhost:4000/2024/01/28/Dataview-Dates-Have-Properties.html">&lt;h1 id=&quot;a-date-data-type&quot;&gt;A Date Data type&lt;/h1&gt;

&lt;p&gt;One of the most interesting &lt;strong&gt;Data type&lt;/strong&gt; related to &lt;strong&gt;&lt;a href=&quot;https://blacksmithgu.github.io/obsidian-dataview/&quot;&gt;Dataview&lt;/a&gt; Fields&lt;/strong&gt; in &lt;strong&gt;Obsidian&lt;/strong&gt; are &lt;strong&gt;dates&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;&lt;a href=&quot;https://blacksmithgu.github.io/obsidian-dataview/&quot;&gt;Dataview&lt;/a&gt;&lt;/strong&gt; I am talking about is the &lt;strong&gt;&lt;a href=&quot;https://obsidian.md/&quot;&gt;Obsidian&lt;/a&gt;&lt;/strong&gt; plugin that allows you to query data from your &lt;strong&gt;Obsidian&lt;/strong&gt; notes using the &lt;strong&gt;Dataview Query Language&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;data&lt;/em&gt; is extracted from your notes &lt;strong&gt;frontmatter&lt;/strong&gt;, from your &lt;strong&gt;inline fields&lt;/strong&gt;, or from &lt;strong&gt;implicit fields&lt;/strong&gt; related to your notes. To learn more about this &lt;em&gt;data&lt;/em&gt;, you can check the following &lt;strong&gt;&lt;a href=&quot;https://blacksmithgu.github.io/obsidian-dataview/annotation/add-metadata/&quot;&gt;documentation&lt;/a&gt;&lt;/strong&gt; page.&lt;/p&gt;

&lt;p&gt;And if you don’t know, &lt;strong&gt;Obsidian&lt;/strong&gt; is a note taking app that uses &lt;strong&gt;Markdown&lt;/strong&gt; markup language for text formatting. It allows you to take notes, easily link between them, automatically generate a &lt;strong&gt;graph&lt;/strong&gt; displaying all the connection available between your notes, and install powerful &lt;strong&gt;plugins&lt;/strong&gt; that allow you to transform your notes, and automate your workflow while using the app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dates&lt;/strong&gt; types are objects that can be created from  text formatted using the &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;&lt;em&gt;ISO8601&lt;/em&gt;&lt;/a&gt;  notation.  But when displaying their values, &lt;strong&gt;Dataview&lt;/strong&gt; will render them in a human readable format .&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/date values example.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;Dataview Date values example&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;what-i-discovered&quot;&gt;What I discovered&lt;/h1&gt;

&lt;p&gt;You can access a particular &lt;strong&gt;date&lt;/strong&gt; or &lt;strong&gt;time&lt;/strong&gt; information from the &lt;strong&gt;date&lt;/strong&gt; object itself, by accessing its properties. For example, to get the &lt;strong&gt;month&lt;/strong&gt; corresponding to a particular &lt;strong&gt;date field&lt;/strong&gt;, all you have to do is to use the &lt;strong&gt;dot&lt;/strong&gt; notation with the &lt;strong&gt;date field&lt;/strong&gt; in question.&lt;/p&gt;

&lt;p&gt;For example, let say you want to display the &lt;strong&gt;month&lt;/strong&gt; property value of the &lt;strong&gt;creation date&lt;/strong&gt; field (&lt;em&gt;ctime&lt;/em&gt;) of a particular note, so you can just write:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;file.ctime.month
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are multiple &lt;strong&gt;date&lt;/strong&gt; and &lt;strong&gt;time&lt;/strong&gt; properties that you can access the same way:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file.ctime.year&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file.ctime.month&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file.ctime.weekyear&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file.ctime.week&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file.ctime.weekday&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file.ctime.day&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file.ctime.hour&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file.ctime.minute&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file.ctime.second&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file.ctime.millisecond&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;For example, right now, I am writing this post on Obsidian. And, if I want to display the &lt;em&gt;day&lt;/em&gt; and the &lt;em&gt;hour&lt;/em&gt; of the date corresponding to the creation of the  note I am writing, I can simply use the following &lt;strong&gt;Dataview&lt;/strong&gt; expression:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```dataview
table file.ctime.day as &quot;📅 Day&quot;,
file.ctime.hour as &quot;⏰&quot; 
where file =this.file
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And the result would be:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/The Result.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;The result of a dataview query on dates fields properties&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;how-i-used-it&quot;&gt;How I used it&lt;/h1&gt;

&lt;p&gt;I wanted to display the &lt;strong&gt;tasks&lt;/strong&gt; planned in a particular &lt;em&gt;week&lt;/em&gt;, and the formula I was writing was already long enough, so the use of the &lt;strong&gt;date property&lt;/strong&gt; was really useful to &lt;strong&gt;shorten&lt;/strong&gt; the expression:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```dataview
table without id file.link as Tasks,
map(filter(file.tasks, (x)=&amp;gt;padleft(string(x.scheduled.weekyear),2,&quot;0&quot;)=substring(split(this.file.name,&quot;-&quot;)[1],1)),(x)=&amp;gt;x.text  +&quot; - (&quot;+dateformat(x.scheduled,&quot;EEE&quot;)+&quot;)&quot;) as steps
from &quot;Execute/Projects&quot;
where file.name[3]=&quot;-&quot;
and length(filter(file.tasks, (x)=&amp;gt;padleft(string(x.scheduled.weekyear),2,&quot;0&quot;)=substring(split(this.file.name,&quot;-&quot;)[1],1)))&amp;gt;0
```  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/the property.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;How a dataview date field property was used&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The expression was written inside a &lt;strong&gt;weekly note&lt;/strong&gt; with a name formatted as follow:&lt;/p&gt;

&lt;p&gt;4 digits representing the year+”-W “+ 2 digits representing the week number (“yyyy-‘W’WW”). For example the &lt;strong&gt;weekly note&lt;/strong&gt; of the  &lt;em&gt;week 4&lt;/em&gt; is named: &lt;em&gt;2024-W04&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here a portion of the result:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/The resutl.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;A use case result from my personal Vault&quot; /&gt;&lt;/p&gt;</content><author><name>Amina Delali</name></author><summary type="html">A Date Data type</summary></entry><entry><title type="html">Listing Files with PowerShell</title><link href="http://localhost:4000/2024/01/19/How-to-list-only-the-name-of-the-files-in-Windows-PowerShell-without-details.html" rel="alternate" type="text/html" title="Listing Files with PowerShell" /><published>2024-01-19T21:56:00+01:00</published><updated>2024-01-19T21:56:00+01:00</updated><id>http://localhost:4000/2024/01/19/How%20to%20list%20only%20the%20name%20of%20the%20files%20in%20Windows%20PowerShell%20without%20details</id><content type="html" xml:base="http://localhost:4000/2024/01/19/How-to-list-only-the-name-of-the-files-in-Windows-PowerShell-without-details.html">&lt;h1 id=&quot;used-when&quot;&gt;Used when&lt;/h1&gt;

&lt;p&gt;I wanted to list the &lt;strong&gt;PNG&lt;/strong&gt; and &lt;strong&gt;SVG&lt;/strong&gt; files I have just created while working on the new design of my other website, but the default command &lt;em&gt;dir&lt;/em&gt; will list the files with other details.&lt;/p&gt;

&lt;p&gt;So, to run the command, I just clicked on &lt;strong&gt;Open in Terminal&lt;/strong&gt; from the &lt;em&gt;Images&lt;/em&gt; folder, and it opened the &lt;strong&gt;PowerShell&lt;/strong&gt; automatically:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/How to list only the name of the files in Windows PowerShell without details-20240113121908819.webp&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;opening a folder in a powershell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From the image below, you can see all the extra details added with the names of the existing files:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/posts/How to list only the name of the files in Windows PowerShell without details-20240113122109714.webp&quot; width=&quot;100%&quot; height=&quot;100%&quot; alt=&quot;default dir command in powershell&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;the-solution&quot;&gt;The Solution&lt;/h1&gt;
&lt;p&gt;knowing that my &lt;em&gt;Images&lt;/em&gt; folder didn’t contain any sub folder, and from a &lt;strong&gt;StackOverflow&lt;/strong&gt; answer available &lt;a href=&quot;https://stackoverflow.com/a/71554161&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; , I run the following command (and it worked):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-PowerShell&quot;&gt;dir *.png | % Name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And here is the result:
&lt;img src=&quot;/img/posts/How to list only the name of the files in Windows PowerShell without details-20240113122453418.webp&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;original-answer&quot;&gt;Original Answer&lt;/h1&gt;

&lt;p&gt;In the original &lt;strong&gt;StackOverflow&lt;/strong&gt; &lt;a href=&quot;https://stackoverflow.com/q/71554087&quot; target=&quot;_blank&quot;&gt;question&lt;/a&gt;, the user wanted to list &lt;em&gt;recursively&lt;/em&gt; its &lt;strong&gt;TXT&lt;/strong&gt; files from the &lt;em&gt;command prompt&lt;/em&gt; without listing the &lt;strong&gt;parent folders&lt;/strong&gt;. And the following &lt;a href=&quot;https://stackoverflow.com/a/71554161&quot; target=&quot;_blank&quot;&gt;answer&lt;/a&gt; was given to him:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;PowerShell Command&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;CMD Command&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; PowerShell &lt;span class=&quot;nt&quot;&gt;-Command&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dir *.txt -r | % Name&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Amina Delali</name></author><summary type="html">Used when</summary></entry><entry><title type="html">What Is It About?</title><link href="http://localhost:4000/2023/06/18/what.html" rel="alternate" type="text/html" title="What Is It About?" /><published>2023-06-18T18:39:00+01:00</published><updated>2023-06-18T18:39:00+01:00</updated><id>http://localhost:4000/2023/06/18/what</id><content type="html" xml:base="http://localhost:4000/2023/06/18/what.html">&lt;p&gt;Each time I work on a particular project, I will have something to solve. To do that, I rely a lot on the resources I find on the internet.&lt;/p&gt;
&lt;p&gt;But sometimes, the answers will not be straightforward, and I will have to be creative and improvise to solve the issues I will be facing.&lt;/p&gt;
&lt;p&gt;So in this posts, I will share solutions to particular problems, that you may face your self. Especially, if you are like me, and you are trying to create a digital business. Or you are simply a digital creator. &lt;/p&gt;

&lt;p&gt;I am thankful to the people that share their knowledge, and help others solving their problems. This is why, I will share here all the answers that I found useful, and that actually helped me solve the problems that  I had.&lt;/p&gt;

&lt;p&gt;Not only that, but there are also a variety of tools and frameworks on the internet, that helped me a lot in my creational journey. This is why I will talk about these tools as well.&lt;/p&gt;

&lt;p&gt;In the case I didn&apos;t use the tools and frameworks in question, but I thought that they may be relevant to your journey, I will also talk about them as well. &lt;/p&gt;
&lt;p&gt;This was a concise description of what these posts will be about. The goal is to share as much as possible useful tutorials or interesting discoveries, wishing that it will help you in your creational journey. Happy Creating 🙂.&lt;/p&gt;</content><author><name>Amina Delali</name></author><summary type="html">Each time I work on a particular project, I will have something to solve. To do that, I rely a lot on the resources I find on the internet. But sometimes, the answers will not be straightforward, and I will have to be creative and improvise to solve the issues I will be facing. So in this posts, I will share solutions to particular problems, that you may face your self. Especially, if you are like me, and you are trying to create a digital business. Or you are simply a digital creator.</summary></entry></feed>